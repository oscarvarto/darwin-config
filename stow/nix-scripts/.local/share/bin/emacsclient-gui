#!/usr/bin/env bash
#
# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Launch Emacs GUI
# @raycast.mode silent
#
# Optional parameters:
# @raycast.packageName Emacs
# @raycast.icon ~/.local/share/img/icons/Emacs.icns
# @raycast.iconDark ~/.local/share/img/icons/Emacs.icns

# Enhanced emacsclient wrapper for proper macOS window recognition
# Note: the @raycast.icon only affects Raycastâ€™s UI, not the Dock icon.
# The Dock icon comes from the running Emacs application bundle.

EMACSCLIENT="${EMACSCLIENT:-}"
if [[ -z "$EMACSCLIENT" ]]; then
    if command -v emacsclient >/dev/null 2>&1; then
        EMACSCLIENT="$(command -v emacsclient)"
    else
        EMACSCLIENT="$HOME/.nix-profile/bin/emacsclient"
    fi
fi

# Check if server is running
if ! "$EMACSCLIENT" -e "(emacs-version)" >/dev/null 2>&1; then
    echo "Emacs daemon not running. Waiting for home-manager service..." >&2
    # Give the home-manager service a moment to start
    sleep 2

    # Check again
    if ! "$EMACSCLIENT" -e "(emacs-version)" >/dev/null 2>&1; then
        echo "Error: Emacs daemon still not available" >&2
        exit 1
    fi
fi

# Determine Emacs app path and bundle identifier for activation (defaults to org.gnu.Emacs)
EMACS_APP_PATH="$HOME/Applications/Home Manager Apps/Emacs.app"
if [[ ! -e "$EMACS_APP_PATH" ]]; then
    EMACS_APP_PATH="/Applications/Emacs.app"
fi

# Try to determine bundle identifier for activation (defaults to org.gnu.Emacs)
EMACS_BUNDLE_ID="org.gnu.Emacs"
if [[ -e "$EMACS_APP_PATH/Contents/Info.plist" ]]; then
    BID=$(/usr/libexec/PlistBuddy -c 'Print :CFBundleIdentifier' "$EMACS_APP_PATH/Contents/Info.plist" 2>/dev/null || true)
    if [[ -n "${BID:-}" ]]; then
        EMACS_BUNDLE_ID="$BID"
    fi
fi

# Create a new frame with proper focus and raise it
# The -c flag creates a new frame (window)
# The -n flag means don't wait for the server to return
"$EMACSCLIENT" \
    --create-frame \
    --no-wait \
    "$@"

# Use only Emacs built-in frame management to avoid multiple Accessibility entries
# This method works reliably without requiring external AppleScript calls
"$EMACSCLIENT" --eval '(progn
  (select-frame-set-input-focus (selected-frame))
  (raise-frame)
  t)' >/dev/null 2>&1 || true

# Ensure macOS focuses the existing Emacs app so the Dock icon is shown
if command -v osascript >/dev/null 2>&1; then
    # Only focus if an Emacs process is already running; do NOT launch a new one
    osascript >/dev/null 2>&1 <<EOF || true
tell application "System Events"
  set emProcs to (application processes whose bundle identifier is "$EMACS_BUNDLE_ID")
  if (count of emProcs) > 0 then
    set frontmost of item 1 of emProcs to true
  end if
end tell
EOF
fi
